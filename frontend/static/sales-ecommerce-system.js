class AxyraSalesEcommerceSystem{constructor(){this.products = [];this.categories = [];this.customers = [];this.orders = [];this.orderItems = [];this.payments = [];this.shipping = [];this.coupons = [];this.reviews = [];this.wishlists = [];this.cart = [];this.isInitialized = false;this.init();}init(){console.log('ðŸ›’ Inicializando sistema de ventas y e-commerce...');this.loadProducts();this.loadCategories();this.loadCustomers();this.loadOrders();this.loadOrderItems();this.loadPayments();this.loadShipping();this.loadCoupons();this.loadReviews();this.loadWishlists();this.loadCart();this.setupEventListeners();this.setupDefaultData();this.isInitialized = true;}loadProducts(){try{const stored = localStorage.getItem('axyra_sales_products');if(stored){this.products = JSON.parse(stored);}}catch(error){console.warn('Error cargando productos:',error);}}saveProducts(){try{localStorage.setItem('axyra_sales_products',JSON.stringify(this.products));}catch(error){console.error('Error guardando productos:',error);}}loadCategories(){try{const stored = localStorage.getItem('axyra_sales_categories');if(stored){this.categories = JSON.parse(stored);}}catch(error){console.warn('Error cargando categorÃ­as:',error);}}saveCategories(){try{localStorage.setItem('axyra_sales_categories',JSON.stringify(this.categories));}catch(error){console.error('Error guardando categorÃ­as:',error);}}loadCustomers(){try{const stored = localStorage.getItem('axyra_sales_customers');if(stored){this.customers = JSON.parse(stored);}}catch(error){console.warn('Error cargando clientes:',error);}}saveCustomers(){try{localStorage.setItem('axyra_sales_customers',JSON.stringify(this.customers));}catch(error){console.error('Error guardando clientes:',error);}}loadOrders(){try{const stored = localStorage.getItem('axyra_sales_orders');if(stored){this.orders = JSON.parse(stored);}}catch(error){console.warn('Error cargando pedidos:',error);}}saveOrders(){try{localStorage.setItem('axyra_sales_orders',JSON.stringify(this.orders));}catch(error){console.error('Error guardando pedidos:',error);}}loadOrderItems(){try{const stored = localStorage.getItem('axyra_sales_order_items');if(stored){this.orderItems = JSON.parse(stored);}}catch(error){console.warn('Error cargando items de pedidos:',error);}}saveOrderItems(){try{localStorage.setItem('axyra_sales_order_items',JSON.stringify(this.orderItems));}catch(error){console.error('Error guardando items de pedidos:',error);}}loadPayments(){try{const stored = localStorage.getItem('axyra_sales_payments');if(stored){this.payments = JSON.parse(stored);}}catch(error){console.warn('Error cargando pagos:',error);}}savePayments(){try{localStorage.setItem('axyra_sales_payments',JSON.stringify(this.payments));}catch(error){console.error('Error guardando pagos:',error);}}loadShipping(){try{const stored = localStorage.getItem('axyra_sales_shipping');if(stored){this.shipping = JSON.parse(stored);}}catch(error){console.warn('Error cargando envÃ­os:',error);}}saveShipping(){try{localStorage.setItem('axyra_sales_shipping',JSON.stringify(this.shipping));}catch(error){console.error('Error guardando envÃ­os:',error);}}loadCoupons(){try{const stored = localStorage.getItem('axyra_sales_coupons');if(stored){this.coupons = JSON.parse(stored);}}catch(error){console.warn('Error cargando cupones:',error);}}saveCoupons(){try{localStorage.setItem('axyra_sales_coupons',JSON.stringify(this.coupons));}catch(error){console.error('Error guardando cupones:',error);}}loadReviews(){try{const stored = localStorage.getItem('axyra_sales_reviews');if(stored){this.reviews = JSON.parse(stored);}}catch(error){console.warn('Error cargando reseÃ±as:',error);}}saveReviews(){try{localStorage.setItem('axyra_sales_reviews',JSON.stringify(this.reviews));}catch(error){console.error('Error guardando reseÃ±as:',error);}}loadWishlists(){try{const stored = localStorage.getItem('axyra_sales_wishlists');if(stored){this.wishlists = JSON.parse(stored);}}catch(error){console.warn('Error cargando listas de deseos:',error);}}saveWishlists(){try{localStorage.setItem('axyra_sales_wishlists',JSON.stringify(this.wishlists));}catch(error){console.error('Error guardando listas de deseos:',error);}}loadCart(){try{const stored = localStorage.getItem('axyra_sales_cart');if(stored){this.cart = JSON.parse(stored);}}catch(error){console.warn('Error cargando carrito:',error);}}saveCart(){try{localStorage.setItem('axyra_sales_cart',JSON.stringify(this.cart));}catch(error){console.error('Error guardando carrito:',error);}}setupEventListeners(){document.addEventListener('productChanged',(event)=>{this.handleProductChange(event.detail);});document.addEventListener('orderChanged',(event)=>{this.handleOrderChange(event.detail);});}setupDefaultData(){if(this.categories.length === 0){this.categories = [{id:'electronics',name:'ElectrÃ³nicos',description:'Dispositivos electrÃ³nicos y tecnologÃ­a',parentId:null,isActive:true,},{id:'clothing',name:'Ropa',description:'Ropa y accesorios',parentId:null,isActive:true,},{id:'home',name:'Hogar',description:'ArtÃ­culos para el hogar',parentId:null,isActive:true,},{id:'books',name:'Libros',description:'Libros y publicaciones',parentId:null,isActive:true,},];this.saveCategories();}if(this.products.length === 0){this.products = [{id:'product_1',name:'Smartphone Samsung Galaxy',description:'Smartphone de Ãºltima generaciÃ³n',sku:'SM-GALAXY-001',categoryId:'electronics',price:800000,comparePrice:900000,cost:600000,stock:50,minStock:5,weight:0.2,dimensions:{length:15,width:7,height:0.8},images:['smartphone1.jpg','smartphone2.jpg'],tags:['smartphone','samsung','android'],isActive:true,isDigital:false,requiresShipping:true,},{id:'product_2',name:'Camiseta BÃ¡sica',description:'Camiseta de algodÃ³n 100%',sku:'CAM-BAS-001',categoryId:'clothing',price:25000,comparePrice:30000,cost:15000,stock:100,minStock:10,weight:0.1,dimensions:{length:30,width:25,height:1},images:['camiseta1.jpg'],tags:['camiseta','algodon','basica'],isActive:true,isDigital:false,requiresShipping:true,},];this.saveProducts();}}handleProductChange(change){const{productId,action,data}= change;switch(action){case 'created':this.products.push(data);this.saveProducts();break;case 'updated':const productIndex = this.products.findIndex((p)=> p.id === productId);if(productIndex !== -1){this.products[productIndex] ={...this.products[productIndex],...data};this.saveProducts();}break;case 'deleted':this.products = this.products.filter((p)=> p.id !== productId);this.saveProducts();break;}}handleOrderChange(change){const{orderId,action,data}= change;switch(action){case 'created':this.orders.push(data);this.saveOrders();break;case 'updated':const orderIndex = this.orders.findIndex((o)=> o.id === orderId);if(orderIndex !== -1){this.orders[orderIndex] ={...this.orders[orderIndex],...data};this.saveOrders();}break;case 'deleted':this.orders = this.orders.filter((o)=> o.id !== orderId);this.saveOrders();break;}}createProduct(productData){const product ={id:'product_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),name:productData.name,description:productData.description || '',sku:productData.sku || this.generateSKU(),categoryId:productData.categoryId,price:productData.price || 0,comparePrice:productData.comparePrice || 0,cost:productData.cost || 0,stock:productData.stock || 0,minStock:productData.minStock || 0,weight:productData.weight || 0,dimensions:productData.dimensions ||{length:0,width:0,height:0},images:productData.images || [],tags:productData.tags || [],isActive:productData.isActive !== false,isDigital:productData.isDigital || false,requiresShipping:productData.requiresShipping !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.products.push(product);this.saveProducts();console.log('âœ… Producto creado:',product.name);return product;}createCategory(categoryData){const category ={id:'category_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),name:categoryData.name,description:categoryData.description || '',parentId:categoryData.parentId || null,isActive:categoryData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.categories.push(category);this.saveCategories();console.log('âœ… CategorÃ­a creada:',category.name);return category;}createCustomer(customerData){const customer ={id:'customer_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),firstName:customerData.firstName,lastName:customerData.lastName,email:customerData.email,phone:customerData.phone || '',address:customerData.address || '',city:customerData.city || '',state:customerData.state || '',country:customerData.country || '',postalCode:customerData.postalCode || '',dateOfBirth:customerData.dateOfBirth || null,gender:customerData.gender || '',isActive:customerData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.customers.push(customer);this.saveCustomers();console.log('âœ… Cliente creado:',customer.firstName + ' ' + customer.lastName);return customer;}createOrder(orderData){const order ={id:'order_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),orderNumber:orderData.orderNumber || this.generateOrderNumber(),customerId:orderData.customerId,status:orderData.status || 'pending',paymentStatus:orderData.paymentStatus || 'pending',shippingStatus:orderData.shippingStatus || 'pending',subtotal:orderData.subtotal || 0,tax:orderData.tax || 0,shipping:orderData.shipping || 0,discount:orderData.discount || 0,total:orderData.total || 0,currency:orderData.currency || 'COP',shippingAddress:orderData.shippingAddress ||{},billingAddress:orderData.billingAddress ||{},notes:orderData.notes || '',metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.orders.push(order);this.saveOrders();console.log('âœ… Pedido creado:',order.orderNumber);return order;}createOrderItem(orderItemData){const orderItem ={id:'item_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),orderId:orderItemData.orderId,productId:orderItemData.productId,quantity:orderItemData.quantity || 1,price:orderItemData.price || 0,total:orderItemData.total || 0,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.orderItems.push(orderItem);this.saveOrderItems();console.log('âœ… Item de pedido creado:',orderItem.id);return orderItem;}createPayment(paymentData){const payment ={id:'payment_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),orderId:paymentData.orderId,amount:paymentData.amount,method:paymentData.method,status:paymentData.status || 'pending',transactionId:paymentData.transactionId || '',gateway:paymentData.gateway || '',processedAt:paymentData.processedAt || null,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.payments.push(payment);this.savePayments();console.log('âœ… Pago creado:',payment.id);return payment;}createCoupon(couponData){const coupon ={id:'coupon_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),code:couponData.code,name:couponData.name,description:couponData.description || '',type:couponData.type || 'percentage',value:couponData.value || 0,minOrderAmount:couponData.minOrderAmount || 0,maxDiscount:couponData.maxDiscount || 0,usageLimit:couponData.usageLimit || 0,usedCount:couponData.usedCount || 0,startDate:couponData.startDate,endDate:couponData.endDate,isActive:couponData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.coupons.push(coupon);this.saveCoupons();console.log('âœ… CupÃ³n creado:',coupon.code);return coupon;}createReview(reviewData){const review ={id:'review_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),productId:reviewData.productId,customerId:reviewData.customerId,rating:reviewData.rating,title:reviewData.title || '',comment:reviewData.comment || '',isVerified:reviewData.isVerified || false,isActive:reviewData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.reviews.push(review);this.saveReviews();console.log('âœ… ReseÃ±a creada:',review.id);return review;}addToCart(productId,quantity = 1){const product = this.products.find((p)=> p.id === productId);if(!product){throw new Error('Producto no encontrado');}if(product.stock < quantity){throw new Error('Stock insuficiente');}const existingItem = this.cart.find((item)=> item.productId === productId);if(existingItem){existingItem.quantity += quantity;}else{this.cart.push({id:'cart_item_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),productId,quantity,price:product.price,total:product.price * quantity,});}this.saveCart();console.log('âœ… Producto agregado al carrito:',product.name);return this.cart;}removeFromCart(productId){this.cart = this.cart.filter((item)=> item.productId !== productId);this.saveCart();console.log('âœ… Producto removido del carrito:',productId);return this.cart;}updateCartQuantity(productId,quantity){const item = this.cart.find((item)=> item.productId === productId);if(item){item.quantity = quantity;item.total = item.price * quantity;this.saveCart();}console.log('âœ… Cantidad actualizada en carrito:',productId,quantity);return this.cart;}clearCart(){this.cart = [];this.saveCart();console.log('âœ… Carrito limpiado');return this.cart;}getCartTotal(){return this.cart.reduce((total,item)=> total + item.total,0);}getCartItemCount(){return this.cart.reduce((count,item)=> count + item.quantity,0);}generateSKU(){const prefix = 'SKU';const timestamp = Date.now().toString(36);const random = Math.random().toString(36).substr(2,4);return `${prefix}-${timestamp}-${random}`.toUpperCase();}generateOrderNumber(){const year = new Date().getFullYear();const month = String(new Date().getMonth()+ 1).padStart(2,'0');const count = this.orders.length + 1;return `ORD-${year}${month}-${String(count).padStart(6,'0')}`;}getSalesStatistics(){const totalProducts = this.products.length;const activeProducts = this.products.filter((p)=> p.isActive).length;const totalOrders = this.orders.length;const completedOrders = this.orders.filter((o)=> o.status === 'delivered').length;const totalRevenue = this.orders.reduce((sum,o)=> sum + o.total,0);const totalCustomers = this.customers.length;const totalReviews = this.reviews.length;const averageRating = this.reviews.length > 0 ? this.reviews.reduce((sum,r)=> sum + r.rating,0)/ this.reviews.length:0;return{totalProducts,activeProducts,totalOrders,completedOrders,totalRevenue,totalCustomers,totalReviews,averageRating:Math.round(averageRating * 10)/ 10,};}showSalesDashboard(){const dashboard = document.createElement('div');dashboard.id = 'sales-dashboard';dashboard.innerHTML = ` <div class="sales-dashboard-overlay"> <div class="sales-dashboard-container"> <div class="sales-dashboard-header"> <h3>ðŸ›’ Dashboard de Ventas</h3> <div class="sales-dashboard-actions"> <button class="btn btn-primary" onclick="axyraSalesEcommerceSystem.showCreateProductDialog()">Nuevo Producto</button> <button class="btn btn-secondary" onclick="axyraSalesEcommerceSystem.showCreateOrderDialog()">Nuevo Pedido</button> <button class="btn btn-close" onclick="document.getElementById('sales-dashboard').remove()">Ã—</button> </div> </div> <div class="sales-dashboard-body"> <div class="sales-dashboard-stats"> ${this.renderSalesStats()}</div> <div class="sales-dashboard-content"> <div class="sales-dashboard-tabs"> <button class="tab-btn active" data-tab="overview">Resumen</button> <button class="tab-btn" data-tab="products">Productos</button> <button class="tab-btn" data-tab="orders">Pedidos</button> <button class="tab-btn" data-tab="customers">Clientes</button> <button class="tab-btn" data-tab="cart">Carrito</button> </div> <div class="sales-dashboard-tab-content"> <div class="tab-content active" id="overview-tab"> ${this.renderOverview()}</div> <div class="tab-content" id="products-tab"> ${this.renderProductsList()}</div> <div class="tab-content" id="orders-tab"> ${this.renderOrdersList()}</div> <div class="tab-content" id="customers-tab"> ${this.renderCustomersList()}</div> <div class="tab-content" id="cart-tab"> ${this.renderCart()}</div> </div> </div> </div> </div> </div> `;dashboard.style.cssText = ` position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);z-index:10000;display:flex;align-items:center;justify-content:center;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;`;document.body.appendChild(dashboard);const tabBtns = dashboard.querySelectorAll('.tab-btn');const tabContents = dashboard.querySelectorAll('.tab-content');tabBtns.forEach((btn)=>{btn.addEventListener('click',()=>{const tabId = btn.dataset.tab;tabBtns.forEach((b)=> b.classList.remove('active'));tabContents.forEach((c)=> c.classList.remove('active'));btn.classList.add('active');document.getElementById(`${tabId}-tab`).classList.add('active');});});}renderSalesStats(){const stats = this.getSalesStatistics();return ` <div class="stats-grid"> <div class="stat-card"> <div class="stat-value">${stats.totalProducts}</div> <div class="stat-label">Total Productos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeProducts}</div> <div class="stat-label">Productos Activos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalOrders}</div> <div class="stat-label">Total Pedidos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.completedOrders}</div> <div class="stat-label">Pedidos Completados</div> </div> <div class="stat-card"> <div class="stat-value">$${stats.totalRevenue.toLocaleString()}</div> <div class="stat-label">Ingresos Totales</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalCustomers}</div> <div class="stat-label">Total Clientes</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalReviews}</div> <div class="stat-label">Total ReseÃ±as</div> </div> <div class="stat-card"> <div class="stat-value">${stats.averageRating}/5</div> <div class="stat-label">CalificaciÃ³n Promedio</div> </div> </div> `;}renderOverview(){const stats = this.getSalesStatistics();return ` <div class="overview-grid"> <div class="overview-card"> <h4>Ventas del Mes</h4> <div class="sales-summary"> <div class="sales-item"> <span>Pedidos</span> <span>${stats.totalOrders}</span> </div> <div class="sales-item"> <span>Ingresos</span> <span>$${stats.totalRevenue.toLocaleString()}</span> </div> <div class="sales-item"> <span>Clientes</span> <span>${stats.totalCustomers}</span> </div> </div> </div> <div class="overview-card"> <h4>Productos</h4> <div class="product-summary"> <div class="product-item"> <span>Total</span> <span>${stats.totalProducts}</span> </div> <div class="product-item"> <span>Activos</span> <span>${stats.activeProducts}</span> </div> <div class="product-item"> <span>CalificaciÃ³n</span> <span>${stats.averageRating}/5</span> </div> </div> </div> </div> `;}renderProductsList(){const products = this.products.slice(-20);return products .map((product)=> ` <div class="product-card"> <div class="product-header"> <h5>${product.name}</h5> <span class="product-price">$${product.price.toLocaleString()}</span> </div> <div class="product-info"> <p>${product.description}</p> <p>SKU:${product.sku}</p> <p>Stock:${product.stock}</p> <p>CategorÃ­a:${product.categoryId}</p> </div> <div class="product-actions"> <button onclick="axyraSalesEcommerceSystem.addToCart('${product.id}')">Agregar al Carrito</button> <button onclick="axyraSalesEcommerceSystem.showProductDetails('${product.id}')">Ver</button> </div> </div> `).join('');}renderOrdersList(){const orders = this.orders.slice(-20);return orders .map((order)=> ` <div class="order-card"> <div class="order-header"> <h5>${order.orderNumber}</h5> <span class="order-status status-${order.status}">${order.status}</span> </div> <div class="order-info"> <p>Cliente:${order.customerId}</p> <p>Total:$${order.total.toLocaleString()}</p> <p>Fecha:${new Date(order.createdAt).toLocaleDateString()}</p> <p>Estado de Pago:${order.paymentStatus}</p> </div> </div> `).join('');}renderCustomersList(){const customers = this.customers.slice(-20);return customers .map((customer)=> ` <div class="customer-card"> <div class="customer-header"> <h5>${customer.firstName}${customer.lastName}</h5> <span class="customer-status ${customer.isActive ? 'active':'inactive'}">${customer.isActive ? 'Activo':'Inactivo'}</span> </div> <div class="customer-info"> <p>Email:${customer.email}</p> <p>TelÃ©fono:${customer.phone}</p> <p>Ciudad:${customer.city}</p> </div> </div> `).join('');}renderCart(){if(this.cart.length === 0){return '<div class="empty-cart">El carrito estÃ¡ vacÃ­o</div>';}return ` <div class="cart-items"> ${this.cart .map((item)=>{const product = this.products.find((p)=> p.id === item.productId);return ` <div class="cart-item"> <div class="cart-item-info"> <h6>${product ? product.name:'Producto no encontrado'}</h6> <p>Precio:$${item.price.toLocaleString()}</p> <p>Cantidad:${item.quantity}</p> <p>Total:$${item.total.toLocaleString()}</p> </div> <div class="cart-item-actions"> <button onclick="axyraSalesEcommerceSystem.updateCartQuantity('${item.productId}',${item.quantity + 1})">+</button> <button onclick="axyraSalesEcommerceSystem.updateCartQuantity('${item.productId}',${item.quantity - 1})">-</button> <button onclick="axyraSalesEcommerceSystem.removeFromCart('${item.productId}')">Eliminar</button> </div> </div> `;}).join('')}</div> <div class="cart-total"> <h4>Total:$${this.getCartTotal().toLocaleString()}</h4> <button onclick="axyraSalesEcommerceSystem.checkout()">Proceder al Pago</button> </div> `;}showCreateProductDialog(){const name = prompt('Nombre del producto:');if(name){const description = prompt('DescripciÃ³n del producto:');const price = parseFloat(prompt('Precio del producto:'));const categoryId = prompt('ID de la categorÃ­a:');this.createProduct({name,description,price,categoryId});}}showCreateOrderDialog(){const customerId = prompt('ID del cliente:');if(customerId){const total = parseFloat(prompt('Total del pedido:'));this.createOrder({customerId,total});}}showProductDetails(productId){const product = this.products.find((p)=> p.id === productId);if(product){alert(`Producto:${product.name}\nDescripciÃ³n:${product.description}\nPrecio:$${product.price.toLocaleString()}\nStock:${product.stock}\nSKU:${product.sku}`);}}checkout(){if(this.cart.length === 0){alert('El carrito estÃ¡ vacÃ­o');return;}const customerId = prompt('ID del cliente:');if(!customerId)return;const order = this.createOrder({customerId,subtotal:this.getCartTotal(),total:this.getCartTotal(),});this.cart.forEach((item)=>{this.createOrderItem({orderId:order.id,productId:item.productId,quantity:item.quantity,price:item.price,total:item.total,});});this.clearCart();alert(`Pedido creado:${order.orderNumber}`);}getCurrentUser(){if(window.obtenerUsuarioActual){const user = window.obtenerUsuarioActual();return user ? user.id:'anonymous';}return 'anonymous';}}let axyraSalesEcommerceSystem;document.addEventListener('DOMContentLoaded',()=>{axyraSalesEcommerceSystem = new AxyraSalesEcommerceSystem();window.axyraSalesEcommerceSystem = axyraSalesEcommerceSystem;});window.AxyraSalesEcommerceSystem = AxyraSalesEcommerceSystem;