class ColombianLaborLawCalculator{constructor(){this.HORAS_MENSUALES = 220;this.HORAS_DIARIAS = 8;this.DIAS_LABORALES_MENSUALES = 27.5;this.TIPOS_HORAS = [ ['ordinarias',0.0],['recargo_nocturno',0.35],['recargo_diurno_dominical',0.75],['recargo_nocturno_dominical',1.1],['hora_extra_diurna',0.25],['hora_extra_nocturna',0.75],['hora_diurna_dominical_o_festivo',0.8],['hora_extra_diurna_dominical_o_festivo',1.05],['hora_nocturna_dominical_o_festivo',1.1],['hora_extra_nocturna_dominical_o_festivo',1.85],];this.RECARGOS ={HORAS_EXTRA_DIURNAS:1.25,HORAS_EXTRA_NOCTURNAS:1.75,HORAS_DOMINICALES:1.75,HORAS_FESTIVAS:1.75,HORAS_EXTRA_FESTIVAS_DIURNAS:2.0,HORAS_EXTRA_FESTIVAS_NOCTURNAS:2.5,HORAS_NOCTURNAS:1.35,HORAS_DOMINICALES_FESTIVAS:2.0,HORAS_EXTRA_DOMINICALES:2.0,HORAS_EXTRA_DOMINICALES_FESTIVAS:2.5,};this.HORARIOS ={DIURNO:{inicio:6,fin:18},NOCTURNO:{inicio:18,fin:6},};}calcularValorHoraOrdinaria(salarioMensual,tipoContrato = 'Por Horas'){if(!salarioMensual || salarioMensual <= 0){throw new Error('El salario mensual debe ser mayor a 0');}if(tipoContrato === 'Fijo'){return salarioMensual / 2;}else{return salarioMensual / this.HORAS_MENSUALES;}}calcularHorasOrdinarias(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora;}calcularHorasNocturnas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_NOCTURNAS;}calcularHorasExtraDiurnas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_EXTRA_DIURNAS;}calcularHorasExtraNocturnas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_EXTRA_NOCTURNAS;}calcularHorasDominicales(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_DOMINICALES;}calcularHorasFestivas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_FESTIVAS;}calcularHorasExtraFestivasDiurnas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_EXTRA_FESTIVAS_DIURNAS;}calcularHorasExtraFestivasNocturnas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_EXTRA_FESTIVAS_NOCTURNAS;}calcularHorasDominicalesFestivas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_DOMINICALES_FESTIVAS;}calcularHorasExtraDominicales(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_EXTRA_DOMINICALES;}calcularHorasExtraDominicalesFestivas(horas,valorHora){if(!horas || horas < 0)return 0;return horas * valorHora * this.RECARGOS.HORAS_EXTRA_DOMINICALES_FESTIVAS;}calcularTotalHoras(horasData){const{ordinarias = 0,nocturnas = 0,extraDiurnas = 0,extraNocturnas = 0,dominicales = 0,festivas = 0,extraFestivasDiurnas = 0,extraFestivasNocturnas = 0,dominicalesFestivas = 0,extraDominicales = 0,extraDominicalesFestivas = 0,}= horasData;return(ordinarias + nocturnas + extraDiurnas + extraNocturnas + dominicales + festivas + extraFestivasDiurnas + extraFestivasNocturnas + dominicalesFestivas + extraDominicales + extraDominicalesFestivas);}calcularSalariosCompletos(horasData,salarioMensual,tipoContrato = 'Por Horas'){if(!salarioMensual || salarioMensual <= 0){throw new Error('El salario mensual debe ser mayor a 0');}const valorHora = this.calcularValorHoraOrdinaria(salarioMensual,tipoContrato);const valoresHoras = this.calcularValoresHoras(salarioMensual,tipoContrato);const mapeoCampos ={ordinarias:'ordinarias',nocturnas:'recargo_nocturno',extraDiurnas:'hora_extra_diurna',extraNocturnas:'hora_extra_nocturna',dominicales:'recargo_diurno_dominical',festivas:'hora_diurna_dominical_o_festivo',extraFestivasDiurnas:'hora_extra_diurna_dominical_o_festivo',extraFestivasNocturnas:'hora_extra_nocturna_dominical_o_festivo',dominicalesFestivas:'hora_nocturna_dominical_o_festivo',extraDominicales:'recargo_nocturno_dominical',extraDominicalesFestivas:'hora_extra_nocturna_dominical_o_festivo',};const salarios ={};Object.entries(horasData).forEach(([campo,horas])=>{if(horas > 0){const tipoHora = mapeoCampos[campo] || campo;const valorHoraTipo = valoresHoras.valores[tipoHora] || valorHora;salarios[campo] = horas * valorHoraTipo;}else{salarios[campo] = 0;}});const totalHoras = Object.values(horasData).reduce((sum,horas)=> sum +(horas || 0),0);const totalSalario = Object.values(salarios).reduce((sum,valor)=> sum + valor,0);return{valorHora,valoresHoras,salarios,totalHoras,totalSalario,resumen:{salarioBase:salarioMensual,horasTrabajadas:totalHoras,valorTotal:totalSalario,tipoContrato:tipoContrato,valoresPorHora:valoresHoras.valores,},};}generarResumenComprobante(calculo,empleado,fecha){return{empleado:{nombre:empleado.nombre || 'N/A',cedula:empleado.cedula || 'N/A',cargo:empleado.cargo || 'N/A',departamento:empleado.departamento || 'N/A',},fecha:fecha,resumen:calculo.resumen,desglose:calculo.salarios,totales:{horas:calculo.totalHoras,salario:calculo.totalSalario,valorHora:calculo.valorHora,},ley:{horasMensuales:this.HORAS_MENSUALES,recargos:this.RECARGOS,horarios:this.HORARIOS,},};}calcularValoresHoras(salarioMensual,tipoContrato = 'Por Horas'){if(!salarioMensual || salarioMensual <= 0){throw new Error('El salario mensual debe ser mayor a 0');}const valorHoraBase = this.calcularValorHoraOrdinaria(salarioMensual,tipoContrato);const valores ={};this.TIPOS_HORAS.forEach(([tipo,recargo])=>{valores[tipo] = valorHoraBase *(1 + recargo);});const mapeoCampos ={ordinarias:'ordinarias',nocturnas:'recargo_nocturno',extraDiurnas:'hora_extra_diurna',extraNocturnas:'hora_extra_nocturna',dominicales:'recargo_diurno_dominical',festivas:'hora_diurna_dominical_o_festivo',dominicalesNocturnas:'hora_nocturna_dominical_o_festivo',festivasNocturnas:'recargo_nocturno_dominical',extraDominicales:'hora_extra_diurna_dominical_o_festivo',extraDominicalesNocturnas:'hora_extra_nocturna_dominical_o_festivo',extraFestivas:'hora_extra_diurna_dominical_o_festivo',extraFestivasNocturnas:'hora_extra_nocturna_dominical_o_festivo',};Object.entries(mapeoCampos).forEach(([campoFormulario,tipoHora])=>{if(valores[tipoHora] !== undefined){valores[campoFormulario] = valores[tipoHora];}});return{valorHoraBase,valores,tipoContrato,salarioMensual,mapeoCampos,};}validarDatos(horasData,salarioMensual){const errores = [];if(!salarioMensual || salarioMensual <= 0){errores.push('El salario mensual debe ser mayor a 0');}if(!horasData || typeof horasData !== 'object'){errores.push('Los datos de horas son requeridos');return{valido:false,errores};}const totalHoras = this.calcularTotalHoras(horasData);if(totalHoras <= 0){errores.push('Debe registrar al menos una hora trabajada');}Object.entries(horasData).forEach(([tipo,horas])=>{if(horas < 0){errores.push(`Las horas ${tipo}no pueden ser negativas`);}});return{valido:errores.length === 0,errores,totalHoras,};}}window.colombianLaborLawCalculator = new ColombianLaborLawCalculator();window.calcularHorasColombia = function(horasData,salarioMensual){try{const validacion = window.colombianLaborLawCalculator.validarDatos(horasData,salarioMensual);if(!validacion.valido){throw new Error(validacion.errores.join(','));}return window.colombianLaborLawCalculator.calcularSalariosCompletos(horasData,salarioMensual);}catch(error){console.error('❌ Error calculando horas:',error);throw error;}};if(typeof module !== 'undefined' && module.exports){module.exports = ColombianLaborLawCalculator;}console.log('✅ Calculadora de Ley Laboral Colombiana cargada correctamente');