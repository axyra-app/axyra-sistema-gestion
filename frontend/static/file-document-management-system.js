class AxyraFileDocumentManagementSystem{constructor(){this.files = [];this.documents = [];this.versions = [];this.permissions = [];this.collaborations = [];this.tags = [];this.categories = [];this.folders = [];this.fileLogs = [];this.isInitialized = false;this.init();}init(){console.log('📁 Inicializando sistema de gestión de archivos y documentos...');this.loadFiles();this.loadDocuments();this.loadVersions();this.loadPermissions();this.loadCollaborations();this.loadTags();this.loadCategories();this.loadFolders();this.loadFileLogs();this.setupEventListeners();this.setupDefaultData();this.isInitialized = true;}loadFiles(){try{const stored = localStorage.getItem('axyra_files');if(stored){this.files = JSON.parse(stored);}}catch(error){console.warn('Error cargando archivos:',error);}}saveFiles(){try{localStorage.setItem('axyra_files',JSON.stringify(this.files));}catch(error){console.error('Error guardando archivos:',error);}}loadDocuments(){try{const stored = localStorage.getItem('axyra_documents');if(stored){this.documents = JSON.parse(stored);}}catch(error){console.warn('Error cargando documentos:',error);}}saveDocuments(){try{localStorage.setItem('axyra_documents',JSON.stringify(this.documents));}catch(error){console.error('Error guardando documentos:',error);}}loadVersions(){try{const stored = localStorage.getItem('axyra_file_versions');if(stored){this.versions = JSON.parse(stored);}}catch(error){console.warn('Error cargando versiones:',error);}}saveVersions(){try{localStorage.setItem('axyra_file_versions',JSON.stringify(this.versions));}catch(error){console.error('Error guardando versiones:',error);}}loadPermissions(){try{const stored = localStorage.getItem('axyra_file_permissions');if(stored){this.permissions = JSON.parse(stored);}}catch(error){console.warn('Error cargando permisos:',error);}}savePermissions(){try{localStorage.setItem('axyra_file_permissions',JSON.stringify(this.permissions));}catch(error){console.error('Error guardando permisos:',error);}}loadCollaborations(){try{const stored = localStorage.getItem('axyra_file_collaborations');if(stored){this.collaborations = JSON.parse(stored);}}catch(error){console.warn('Error cargando colaboraciones:',error);}}saveCollaborations(){try{localStorage.setItem('axyra_file_collaborations',JSON.stringify(this.collaborations));}catch(error){console.error('Error guardando colaboraciones:',error);}}loadTags(){try{const stored = localStorage.getItem('axyra_file_tags');if(stored){this.tags = JSON.parse(stored);}}catch(error){console.warn('Error cargando etiquetas:',error);}}saveTags(){try{localStorage.setItem('axyra_file_tags',JSON.stringify(this.tags));}catch(error){console.error('Error guardando etiquetas:',error);}}loadCategories(){try{const stored = localStorage.getItem('axyra_file_categories');if(stored){this.categories = JSON.parse(stored);}}catch(error){console.warn('Error cargando categorías:',error);}}saveCategories(){try{localStorage.setItem('axyra_file_categories',JSON.stringify(this.categories));}catch(error){console.error('Error guardando categorías:',error);}}loadFolders(){try{const stored = localStorage.getItem('axyra_file_folders');if(stored){this.folders = JSON.parse(stored);}}catch(error){console.warn('Error cargando carpetas:',error);}}saveFolders(){try{localStorage.setItem('axyra_file_folders',JSON.stringify(this.folders));}catch(error){console.error('Error guardando carpetas:',error);}}loadFileLogs(){try{const stored = localStorage.getItem('axyra_file_logs');if(stored){this.fileLogs = JSON.parse(stored);}}catch(error){console.warn('Error cargando logs de archivos:',error);}}saveFileLogs(){try{localStorage.setItem('axyra_file_logs',JSON.stringify(this.fileLogs));}catch(error){console.error('Error guardando logs de archivos:',error);}}setupEventListeners(){document.addEventListener('fileChanged',(event)=>{this.handleFileChange(event.detail);});document.addEventListener('documentChanged',(event)=>{this.handleDocumentChange(event.detail);});}setupDefaultData(){if(this.categories.length === 0){this.categories = [{id:'documents',name:'Documentos',description:'Documentos generales',isActive:true,},{id:'images',name:'Imágenes',description:'Archivos de imagen',isActive:true,},{id:'videos',name:'Videos',description:'Archivos de video',isActive:true,},{id:'audio',name:'Audio',description:'Archivos de audio',isActive:true,},{id:'spreadsheets',name:'Hojas de Cálculo',description:'Archivos de Excel y similares',isActive:true,},{id:'presentations',name:'Presentaciones',description:'Archivos de PowerPoint y similares',isActive:true,},];this.saveCategories();}if(this.folders.length === 0){this.folders = [{id:'root',name:'Raíz',description:'Carpeta raíz del sistema',parentId:null,isActive:true,},{id:'documents',name:'Documentos',description:'Carpeta de documentos',parentId:'root',isActive:true,},{id:'images',name:'Imágenes',description:'Carpeta de imágenes',parentId:'root',isActive:true,},{id:'videos',name:'Videos',description:'Carpeta de videos',parentId:'root',isActive:true,},];this.saveFolders();}}handleFileChange(change){const{fileId,action,data}= change;switch(action){case 'created':this.files.push(data);this.saveFiles();break;case 'updated':const fileIndex = this.files.findIndex((f)=> f.id === fileId);if(fileIndex !== -1){this.files[fileIndex] ={...this.files[fileIndex],...data};this.saveFiles();}break;case 'deleted':this.files = this.files.filter((f)=> f.id !== fileId);this.saveFiles();break;}}handleDocumentChange(change){const{documentId,action,data}= change;switch(action){case 'created':this.documents.push(data);this.saveDocuments();break;case 'updated':const documentIndex = this.documents.findIndex((d)=> d.id === documentId);if(documentIndex !== -1){this.documents[documentIndex] ={...this.documents[documentIndex],...data};this.saveDocuments();}break;case 'deleted':this.documents = this.documents.filter((d)=> d.id !== documentId);this.saveDocuments();break;}}createFile(fileData){const file ={id:'file_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),name:fileData.name,originalName:fileData.originalName || fileData.name,description:fileData.description || '',type:fileData.type || 'unknown',size:fileData.size || 0,mimeType:fileData.mimeType || 'application/octet-stream',path:fileData.path || '',url:fileData.url || '',folderId:fileData.folderId || 'root',categoryId:fileData.categoryId || 'documents',tags:fileData.tags || [],isPublic:fileData.isPublic || false,isActive:fileData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.files.push(file);this.saveFiles();console.log('✅ Archivo creado:',file.name);return file;}createDocument(documentData){const document ={id:'document_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),title:documentData.title,content:documentData.content || '',type:documentData.type || 'text',status:documentData.status || 'draft',version:documentData.version || 1,isActive:documentData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),updatedAt:new Date().toISOString(),updatedBy:this.getCurrentUser(),},};this.documents.push(document);this.saveDocuments();console.log('✅ Documento creado:',document.title);return document;}createVersion(versionData){const version ={id:'version_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),fileId:versionData.fileId,version:versionData.version || 1,changes:versionData.changes || '',size:versionData.size || 0,path:versionData.path || '',url:versionData.url || '',isActive:versionData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.versions.push(version);this.saveVersions();console.log('✅ Versión creada:',version.version);return version;}createPermission(permissionData){const permission ={id:'permission_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),fileId:permissionData.fileId,userId:permissionData.userId,role:permissionData.role,canRead:permissionData.canRead || false,canWrite:permissionData.canWrite || false,canDelete:permissionData.canDelete || false,canShare:permissionData.canShare || false,isActive:permissionData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.permissions.push(permission);this.savePermissions();console.log('✅ Permiso creado:',permission.role);return permission;}createCollaboration(collaborationData){const collaboration ={id:'collaboration_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),fileId:collaborationData.fileId,userId:collaborationData.userId,action:collaborationData.action,content:collaborationData.content || '',isActive:collaborationData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.collaborations.push(collaboration);this.saveCollaborations();console.log('✅ Colaboración creada:',collaboration.action);return collaboration;}createTag(tagData){const tag ={id:'tag_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),name:tagData.name,description:tagData.description || '',color:tagData.color || '#007bff',isActive:tagData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.tags.push(tag);this.saveTags();console.log('✅ Etiqueta creada:',tag.name);return tag;}createCategory(categoryData){const category ={id:'category_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),name:categoryData.name,description:categoryData.description || '',isActive:categoryData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.categories.push(category);this.saveCategories();console.log('✅ Categoría creada:',category.name);return category;}createFolder(folderData){const folder ={id:'folder_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),name:folderData.name,description:folderData.description || '',parentId:folderData.parentId || 'root',isActive:folderData.isActive !== false,metadata:{createdAt:new Date().toISOString(),createdBy:this.getCurrentUser(),},};this.folders.push(folder);this.saveFolders();console.log('✅ Carpeta creada:',folder.name);return folder;}createFileLog(logData){const log ={id:'log_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),level:logData.level,message:logData.message,fileId:logData.fileId || null,userId:logData.userId || this.getCurrentUser(),source:logData.source || 'system',category:logData.category || 'general',data:logData.data ||{},timestamp:new Date().toISOString(),metadata:{createdBy:this.getCurrentUser(),},};this.fileLogs.push(log);this.saveFileLogs();console.log('✅ Log de archivo creado:',log.message);return log;}getFileStatistics(){const totalFiles = this.files.length;const activeFiles = this.files.filter((f)=> f.isActive).length;const totalDocuments = this.documents.length;const activeDocuments = this.documents.filter((d)=> d.isActive).length;const totalVersions = this.versions.length;const totalPermissions = this.permissions.length;const activePermissions = this.permissions.filter((p)=> p.isActive).length;const totalCollaborations = this.collaborations.length;const activeCollaborations = this.collaborations.filter((c)=> c.isActive).length;const totalTags = this.tags.length;const activeTags = this.tags.filter((t)=> t.isActive).length;const totalCategories = this.categories.length;const activeCategories = this.categories.filter((c)=> c.isActive).length;const totalFolders = this.folders.length;const activeFolders = this.folders.filter((f)=> f.isActive).length;const totalLogs = this.fileLogs.length;const errorLogs = this.fileLogs.filter((l)=> l.level === 'error').length;return{totalFiles,activeFiles,totalDocuments,activeDocuments,totalVersions,totalPermissions,activePermissions,totalCollaborations,activeCollaborations,totalTags,activeTags,totalCategories,activeCategories,totalFolders,activeFolders,totalLogs,errorLogs,};}showFileManagementDashboard(){const dashboard = document.createElement('div');dashboard.id = 'file-management-dashboard';dashboard.innerHTML = ` <div class="file-management-dashboard-overlay"> <div class="file-management-dashboard-container"> <div class="file-management-dashboard-header"> <h3>📁 Dashboard de Gestión de Archivos</h3> <div class="file-management-dashboard-actions"> <button class="btn btn-primary" onclick="axyraFileDocumentManagementSystem.showCreateFileDialog()">Nuevo Archivo</button> <button class="btn btn-secondary" onclick="axyraFileDocumentManagementSystem.showCreateDocumentDialog()">Nuevo Documento</button> <button class="btn btn-close" onclick="document.getElementById('file-management-dashboard').remove()">×</button> </div> </div> <div class="file-management-dashboard-body"> <div class="file-management-dashboard-stats"> ${this.renderFileStats()}</div> <div class="file-management-dashboard-content"> <div class="file-management-dashboard-tabs"> <button class="tab-btn active" data-tab="overview">Resumen</button> <button class="tab-btn" data-tab="files">Archivos</button> <button class="tab-btn" data-tab="documents">Documentos</button> <button class="tab-btn" data-tab="versions">Versiones</button> <button class="tab-btn" data-tab="permissions">Permisos</button> <button class="tab-btn" data-tab="collaborations">Colaboraciones</button> <button class="tab-btn" data-tab="tags">Etiquetas</button> <button class="tab-btn" data-tab="categories">Categorías</button> <button class="tab-btn" data-tab="folders">Carpetas</button> <button class="tab-btn" data-tab="logs">Logs</button> </div> <div class="file-management-dashboard-tab-content"> <div class="tab-content active" id="overview-tab"> ${this.renderOverview()}</div> <div class="tab-content" id="files-tab"> ${this.renderFilesList()}</div> <div class="tab-content" id="documents-tab"> ${this.renderDocumentsList()}</div> <div class="tab-content" id="versions-tab"> ${this.renderVersionsList()}</div> <div class="tab-content" id="permissions-tab"> ${this.renderPermissionsList()}</div> <div class="tab-content" id="collaborations-tab"> ${this.renderCollaborationsList()}</div> <div class="tab-content" id="tags-tab"> ${this.renderTagsList()}</div> <div class="tab-content" id="categories-tab"> ${this.renderCategoriesList()}</div> <div class="tab-content" id="folders-tab"> ${this.renderFoldersList()}</div> <div class="tab-content" id="logs-tab"> ${this.renderLogsList()}</div> </div> </div> </div> </div> </div> `;dashboard.style.cssText = ` position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);z-index:10000;display:flex;align-items:center;justify-content:center;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;`;document.body.appendChild(dashboard);const tabBtns = dashboard.querySelectorAll('.tab-btn');const tabContents = dashboard.querySelectorAll('.tab-content');tabBtns.forEach((btn)=>{btn.addEventListener('click',()=>{const tabId = btn.dataset.tab;tabBtns.forEach((b)=> b.classList.remove('active'));tabContents.forEach((c)=> c.classList.remove('active'));btn.classList.add('active');document.getElementById(`${tabId}-tab`).classList.add('active');});});}renderFileStats(){const stats = this.getFileStatistics();return ` <div class="stats-grid"> <div class="stat-card"> <div class="stat-value">${stats.totalFiles}</div> <div class="stat-label">Total Archivos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeFiles}</div> <div class="stat-label">Archivos Activos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalDocuments}</div> <div class="stat-label">Total Documentos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeDocuments}</div> <div class="stat-label">Documentos Activos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalVersions}</div> <div class="stat-label">Total Versiones</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalPermissions}</div> <div class="stat-label">Total Permisos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activePermissions}</div> <div class="stat-label">Permisos Activos</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalCollaborations}</div> <div class="stat-label">Total Colaboraciones</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeCollaborations}</div> <div class="stat-label">Colaboraciones Activas</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalTags}</div> <div class="stat-label">Total Etiquetas</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeTags}</div> <div class="stat-label">Etiquetas Activas</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalCategories}</div> <div class="stat-label">Total Categorías</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeCategories}</div> <div class="stat-label">Categorías Activas</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalFolders}</div> <div class="stat-label">Total Carpetas</div> </div> <div class="stat-card"> <div class="stat-value">${stats.activeFolders}</div> <div class="stat-label">Carpetas Activas</div> </div> <div class="stat-card"> <div class="stat-value">${stats.totalLogs}</div> <div class="stat-label">Total Logs</div> </div> <div class="stat-card"> <div class="stat-value">${stats.errorLogs}</div> <div class="stat-label">Logs de Error</div> </div> </div> `;}renderOverview(){const stats = this.getFileStatistics();return ` <div class="overview-grid"> <div class="overview-card"> <h4>Estado de Archivos</h4> <div class="file-status"> <div class="status-item"> <span>Archivos Activos</span> <span>${stats.activeFiles}/${stats.totalFiles}</span> </div> <div class="status-item"> <span>Documentos Activos</span> <span>${stats.activeDocuments}/${stats.totalDocuments}</span> </div> <div class="status-item"> <span>Total Versiones</span> <span>${stats.totalVersions}</span> </div> </div> </div> <div class="overview-card"> <h4>Permisos y Colaboración</h4> <div class="permissions-collaboration"> <div class="permission-item"> <span>Permisos Activos</span> <span>${stats.activePermissions}</span> </div> <div class="permission-item"> <span>Colaboraciones Activas</span> <span>${stats.activeCollaborations}</span> </div> <div class="permission-item"> <span>Total Permisos</span> <span>${stats.totalPermissions}</span> </div> </div> </div> <div class="overview-card"> <h4>Organización</h4> <div class="organization"> <div class="org-item"> <span>Etiquetas Activas</span> <span>${stats.activeTags}</span> </div> <div class="org-item"> <span>Categorías Activas</span> <span>${stats.activeCategories}</span> </div> <div class="org-item"> <span>Carpetas Activas</span> <span>${stats.activeFolders}</span> </div> </div> </div> </div> `;}renderFilesList(){const files = this.files.slice(-20);return files .map((file)=> ` <div class="file-card"> <div class="file-header"> <h5>${file.name}</h5> <span class="file-type type-${file.type}">${file.type}</span> </div> <div class="file-info"> <p>${file.description}</p> <p>Tamaño:${this.formatFileSize(file.size)}</p> <p>Tipo MIME:${file.mimeType}</p> <p>Público:${file.isPublic ? 'Sí':'No'}</p> </div> <div class="file-actions"> <button onclick="axyraFileDocumentManagementSystem.showFileDetails('${file.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editFile('${file.id}')">Editar</button> </div> </div> `).join('');}renderDocumentsList(){const documents = this.documents.slice(-20);return documents .map((document)=> ` <div class="document-card"> <div class="document-header"> <h5>${document.title}</h5> <span class="document-status status-${document.status}">${document.status}</span> </div> <div class="document-info"> <p>Tipo:${document.type}</p> <p>Versión:${document.version}</p> <p>Contenido:${document.content.substring(0,100)}...</p> </div> <div class="document-actions"> <button onclick="axyraFileDocumentManagementSystem.showDocumentDetails('${document.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editDocument('${document.id}')">Editar</button> </div> </div> `).join('');}renderVersionsList(){const versions = this.versions.slice(-20);return versions .map((version)=> ` <div class="version-card"> <div class="version-header"> <h5>Versión ${version.version}</h5> <span class="version-status ${version.isActive ? 'active':'inactive'}">${version.isActive ? 'Activa':'Inactiva'}</span> </div> <div class="version-info"> <p>Archivo:${version.fileId}</p> <p>Cambios:${version.changes}</p> <p>Tamaño:${this.formatFileSize(version.size)}</p> </div> <div class="version-actions"> <button onclick="axyraFileDocumentManagementSystem.showVersionDetails('${version.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.restoreVersion('${version.id}')">Restaurar</button> </div> </div> `).join('');}renderPermissionsList(){const permissions = this.permissions.slice(-20);return permissions .map((permission)=> ` <div class="permission-card"> <div class="permission-header"> <h5>${permission.role}</h5> <span class="permission-status ${permission.isActive ? 'active':'inactive'}">${permission.isActive ? 'Activo':'Inactivo'}</span> </div> <div class="permission-info"> <p>Archivo:${permission.fileId}</p> <p>Usuario:${permission.userId}</p> <p>Lectura:${permission.canRead ? 'Sí':'No'}</p> <p>Escritura:${permission.canWrite ? 'Sí':'No'}</p> <p>Eliminación:${permission.canDelete ? 'Sí':'No'}</p> <p>Compartir:${permission.canShare ? 'Sí':'No'}</p> </div> <div class="permission-actions"> <button onclick="axyraFileDocumentManagementSystem.showPermissionDetails('${permission.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editPermission('${permission.id}')">Editar</button> </div> </div> `).join('');}renderCollaborationsList(){const collaborations = this.collaborations.slice(-20);return collaborations .map((collaboration)=> ` <div class="collaboration-card"> <div class="collaboration-header"> <h5>${collaboration.action}</h5> <span class="collaboration-status ${collaboration.isActive ? 'active':'inactive'}">${collaboration.isActive ? 'Activa':'Inactiva'}</span> </div> <div class="collaboration-info"> <p>Archivo:${collaboration.fileId}</p> <p>Usuario:${collaboration.userId}</p> <p>Contenido:${collaboration.content.substring(0,100)}...</p> </div> <div class="collaboration-actions"> <button onclick="axyraFileDocumentManagementSystem.showCollaborationDetails('${collaboration.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editCollaboration('${collaboration.id}')">Editar</button> </div> </div> `).join('');}renderTagsList(){const tags = this.tags.slice(-20);return tags .map((tag)=> ` <div class="tag-card"> <div class="tag-header"> <h5>${tag.name}</h5> <span class="tag-color" style="background-color:${tag.color}"></span> </div> <div class="tag-info"> <p>${tag.description}</p> <p>Estado:${tag.isActive ? 'Activo':'Inactivo'}</p> </div> <div class="tag-actions"> <button onclick="axyraFileDocumentManagementSystem.showTagDetails('${tag.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editTag('${tag.id}')">Editar</button> </div> </div> `).join('');}renderCategoriesList(){const categories = this.categories.slice(-20);return categories .map((category)=> ` <div class="category-card"> <div class="category-header"> <h5>${category.name}</h5> <span class="category-status ${category.isActive ? 'active':'inactive'}">${category.isActive ? 'Activo':'Inactivo'}</span> </div> <div class="category-info"> <p>${category.description}</p> </div> <div class="category-actions"> <button onclick="axyraFileDocumentManagementSystem.showCategoryDetails('${category.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editCategory('${category.id}')">Editar</button> </div> </div> `).join('');}renderFoldersList(){const folders = this.folders.slice(-20);return folders .map((folder)=> ` <div class="folder-card"> <div class="folder-header"> <h5>${folder.name}</h5> <span class="folder-status ${folder.isActive ? 'active':'inactive'}">${folder.isActive ? 'Activo':'Inactivo'}</span> </div> <div class="folder-info"> <p>${folder.description}</p> <p>Padre:${folder.parentId || 'Raíz'}</p> </div> <div class="folder-actions"> <button onclick="axyraFileDocumentManagementSystem.showFolderDetails('${folder.id}')">Ver</button> <button onclick="axyraFileDocumentManagementSystem.editFolder('${folder.id}')">Editar</button> </div> </div> `).join('');}renderLogsList(){const logs = this.fileLogs.slice(-20);return logs .map((log)=> ` <div class="log-card"> <div class="log-header"> <h5>${log.message}</h5> <span class="log-level level-${log.level}">${log.level}</span> </div> <div class="log-info"> <p>Archivo:${log.fileId || 'N/A'}</p> <p>Usuario:${log.userId}</p> <p>Fuente:${log.source}</p> <p>Categoría:${log.category}</p> <p>Fecha:${new Date(log.timestamp).toLocaleString()}</p> </div> </div> `).join('');}formatFileSize(bytes){if(bytes === 0)return '0 Bytes';const k = 1024;const sizes = ['Bytes','KB','MB','GB','TB'];const i = Math.floor(Math.log(bytes)/ Math.log(k));return parseFloat((bytes / Math.pow(k,i)).toFixed(2))+ ' ' + sizes[i];}showCreateFileDialog(){const name = prompt('Nombre del archivo:');if(name){const type = prompt('Tipo de archivo:');const size = prompt('Tamaño en bytes:');this.createFile({name,type,size:parseInt(size)});}}showCreateDocumentDialog(){const title = prompt('Título del documento:');if(title){const content = prompt('Contenido:');const type = prompt('Tipo(text,html,markdown,pdf):');this.createDocument({title,content,type});}}showFileDetails(fileId){const file = this.files.find((f)=> f.id === fileId);if(file){alert(`Archivo:${file.name}\nDescripción:${file.description}\nTipo:${file.type}\nTamaño:${this.formatFileSize(file.size)}\nTipo MIME:${file.mimeType}`);}}editFile(fileId){const file = this.files.find((f)=> f.id === fileId);if(file){const newName = prompt('Nuevo nombre:',file.name);if(newName){file.name = newName;this.saveFiles();}}}showDocumentDetails(documentId){const document = this.documents.find((d)=> d.id === documentId);if(document){alert(`Documento:${document.title}\nTipo:${document.type}\nVersión:${document.version}\nEstado:${document.status}\nContenido:${document.content.substring(0,200)}...`);}}editDocument(documentId){const document = this.documents.find((d)=> d.id === documentId);if(document){const newTitle = prompt('Nuevo título:',document.title);if(newTitle){document.title = newTitle;this.saveDocuments();}}}showVersionDetails(versionId){const version = this.versions.find((v)=> v.id === versionId);if(version){alert(`Versión:${version.version}\nArchivo:${version.fileId}\nCambios:${version.changes}\nTamaño:${this.formatFileSize(version.size)}`);}}restoreVersion(versionId){const version = this.versions.find((v)=> v.id === versionId);if(version){version.isActive = true;this.saveVersions();}}showPermissionDetails(permissionId){const permission = this.permissions.find((p)=> p.id === permissionId);if(permission){alert(`Permiso:${permission.role}\nArchivo:${permission.fileId}\nUsuario:${permission.userId}\nLectura:${permission.canRead ? 'Sí':'No'}\nEscritura:${permission.canWrite ? 'Sí':'No'}`);}}editPermission(permissionId){const permission = this.permissions.find((p)=> p.id === permissionId);if(permission){const newRole = prompt('Nuevo rol(owner,editor,viewer,commenter):',permission.role);if(newRole){permission.role = newRole;this.savePermissions();}}}showCollaborationDetails(collaborationId){const collaboration = this.collaborations.find((c)=> c.id === collaborationId);if(collaboration){alert(`Colaboración:${collaboration.action}\nArchivo:${collaboration.fileId}\nUsuario:${collaboration.userId}\nContenido:${collaboration.content}`);}}editCollaboration(collaborationId){const collaboration = this.collaborations.find((c)=> c.id === collaborationId);if(collaboration){const newContent = prompt('Nuevo contenido:',collaboration.content);if(newContent !== null){collaboration.content = newContent;this.saveCollaborations();}}}showTagDetails(tagId){const tag = this.tags.find((t)=> t.id === tagId);if(tag){alert(`Etiqueta:${tag.name}\nDescripción:${tag.description}\nColor:${tag.color}\nEstado:${tag.isActive ? 'Activo':'Inactivo'}`);}}editTag(tagId){const tag = this.tags.find((t)=> t.id === tagId);if(tag){const newName = prompt('Nuevo nombre:',tag.name);if(newName){tag.name = newName;this.saveTags();}}}showCategoryDetails(categoryId){const category = this.categories.find((c)=> c.id === categoryId);if(category){alert(`Categoría:${category.name}\nDescripción:${category.description}\nEstado:${category.isActive ? 'Activo':'Inactivo'}`);}}editCategory(categoryId){const category = this.categories.find((c)=> c.id === categoryId);if(category){const newName = prompt('Nuevo nombre:',category.name);if(newName){category.name = newName;this.saveCategories();}}}showFolderDetails(folderId){const folder = this.folders.find((f)=> f.id === folderId);if(folder){alert(`Carpeta:${folder.name}\nDescripción:${folder.description}\nPadre:${folder.parentId || 'Raíz'}\nEstado:${folder.isActive ? 'Activo':'Inactivo'}`);}}editFolder(folderId){const folder = this.folders.find((f)=> f.id === folderId);if(folder){const newName = prompt('Nuevo nombre:',folder.name);if(newName){folder.name = newName;this.saveFolders();}}}getCurrentUser(){if(window.obtenerUsuarioActual){const user = window.obtenerUsuarioActual();return user ? user.id:'anonymous';}return 'anonymous';}}let axyraFileDocumentManagementSystem;document.addEventListener('DOMContentLoaded',()=>{axyraFileDocumentManagementSystem = new AxyraFileDocumentManagementSystem();window.axyraFileDocumentManagementSystem = axyraFileDocumentManagementSystem;});window.AxyraFileDocumentManagementSystem = AxyraFileDocumentManagementSystem;