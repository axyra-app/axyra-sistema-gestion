class AxyraDataRecoverySystem{constructor(){this.backupConfig ={autoBackup:true,backupInterval:24 * 60 * 60 * 1000,maxBackups:30,compressionEnabled:true,encryptionEnabled:false,cloudSync:false,};this.backups = [];this.recoveryPoints = [];this.isBackingUp = false;this.backupTimer = null;this.init();}init(){console.log('üíæ Inicializando sistema de recuperaci√≥n de datos...');this.loadBackupConfig();this.loadBackups();this.setupAutoBackup();this.setupDataProtection();}loadBackupConfig(){try{const stored = localStorage.getItem('axyra_backup_config');if(stored){const parsed = JSON.parse(stored);this.backupConfig ={...this.backupConfig,...parsed};}}catch(error){console.warn('Error cargando configuraci√≥n de backup:',error);}}saveBackupConfig(){try{localStorage.setItem('axyra_backup_config',JSON.stringify(this.backupConfig));}catch(error){console.error('Error guardando configuraci√≥n de backup:',error);}}loadBackups(){try{const stored = localStorage.getItem('axyra_backups');if(stored){this.backups = JSON.parse(stored);}}catch(error){console.warn('Error cargando backups:',error);}}saveBackups(){try{localStorage.setItem('axyra_backups',JSON.stringify(this.backups));}catch(error){console.error('Error guardando backups:',error);}}setupAutoBackup(){if(this.backupConfig.autoBackup){this.startAutoBackup();}}startAutoBackup(){if(this.backupTimer){clearInterval(this.backupTimer);}this.backupTimer = setInterval(()=>{this.createBackup('AUTOMATIC');},this.backupConfig.backupInterval);console.log('üîÑ Backup autom√°tico iniciado');}stopAutoBackup(){if(this.backupTimer){clearInterval(this.backupTimer);this.backupTimer = null;}console.log('‚èπÔ∏è Backup autom√°tico detenido');}setupDataProtection(){this.setupBeforeUnload();this.setupDataValidation();this.setupRecoveryPoints();}setupBeforeUnload(){window.addEventListener('beforeunload',(event)=>{if(this.hasUnsavedChanges()){event.preventDefault();event.returnValue = '¬øEst√° seguro de que desea salir? Tiene cambios sin guardar.';return event.returnValue;}});}hasUnsavedChanges(){const forms = document.querySelectorAll('form');for(let form of forms){if(form.dataset.unsaved === 'true'){return true;}}return false;}setupDataValidation(){setInterval(()=>{this.validateDataIntegrity();},5 * 60 * 1000);}validateDataIntegrity(){const criticalData = ['axyra_empleados','axyra_horas','axyra_nominas','axyra_inventario','axyra_cuadre_caja'];const issues = [];criticalData.forEach((key)=>{try{const data = localStorage.getItem(key);if(data){JSON.parse(data);}}catch(error){issues.push({key:key,error:error.message,timestamp:new Date().toISOString(),});}});if(issues.length > 0){this.handleDataCorruption(issues);}}handleDataCorruption(issues){console.error('üö® Corrupci√≥n de datos detectada:',issues);if(window.axyraNotificationSystem){window.axyraNotificationSystem.showError('Corrupci√≥n de datos detectada. Se recomienda restaurar desde un backup.',{duration:0,actions:[{text:'Restaurar Backup',action:()=> this.showRecoveryOptions(),},],});}}setupRecoveryPoints(){setInterval(()=>{this.createRecoveryPoint();},60 * 60 * 1000);}createRecoveryPoint(){const recoveryPoint ={id:'rp_' + Date.now(),timestamp:new Date().toISOString(),type:'AUTOMATIC',data:this.exportAllData(),size:this.calculateDataSize(),};this.recoveryPoints.push(recoveryPoint);if(this.recoveryPoints.length > 100){this.recoveryPoints = this.recoveryPoints.slice(-50);}this.saveRecoveryPoints();}saveRecoveryPoints(){try{localStorage.setItem('axyra_recovery_points',JSON.stringify(this.recoveryPoints));}catch(error){console.error('Error guardando puntos de recuperaci√≥n:',error);}}async createBackup(type = 'MANUAL',description = ''){if(this.isBackingUp){console.warn('Backup ya en progreso');return;}this.isBackingUp = true;console.log('üíæ Creando backup...');try{const backup ={id:'backup_' + Date.now(),timestamp:new Date().toISOString(),type:type,description:description,version:'1.0.0',data:await this.exportAllData(),size:0,checksum:'',};backup.size = this.calculateDataSize();backup.checksum = this.calculateChecksum(backup.data);if(this.backupConfig.compressionEnabled){backup.data = await this.compressData(backup.data);}if(this.backupConfig.encryptionEnabled){backup.data = await this.encryptData(backup.data);}this.backups.push(backup);if(this.backups.length > this.backupConfig.maxBackups){this.backups = this.backups.slice(-this.backupConfig.maxBackups);}this.saveBackups();console.log('‚úÖ Backup creado exitosamente');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Backup creado exitosamente');}return backup;}catch(error){console.error('Error creando backup:',error);if(window.axyraNotificationSystem){window.axyraNotificationSystem.showError('Error creando backup:' + error.message);}throw error;}finally{this.isBackingUp = false;}}async exportAllData(){const data ={};const criticalKeys = [ 'axyra_empleados','axyra_horas','axyra_nominas','axyra_inventario','axyra_cuadre_caja','axyra_config_empresa','axyra_config_sistema','axyra_usuarios','axyra_roles','axyra_audit_log','axyra_security_log',];criticalKeys.forEach((key)=>{const value = localStorage.getItem(key);if(value){try{data[key] = JSON.parse(value);}catch(error){data[key] = value;}}});return data;}calculateDataSize(){const data = JSON.stringify(localStorage);return new Blob([data]).size;}calculateChecksum(data){const str = JSON.stringify(data);let hash = 0;for(let i = 0;i < str.length;i++){const char = str.charCodeAt(i);hash =(hash << 5)- hash + char;hash = hash & hash;}return hash.toString(16);}async compressData(data){return btoa(JSON.stringify(data));}async decompressData(compressedData){return JSON.parse(atob(compressedData));}async encryptData(data){return btoa(JSON.stringify(data));}async decryptData(encryptedData){return JSON.parse(atob(encryptedData));}async restoreBackup(backupId){const backup = this.backups.find((b)=> b.id === backupId);if(!backup){throw new Error('Backup no encontrado');}console.log('üîÑ Restaurando backup:',backup.id);try{let data = backup.data;if(this.backupConfig.encryptionEnabled){data = await this.decryptData(data);}if(this.backupConfig.compressionEnabled){data = await this.decompressData(data);}const currentChecksum = this.calculateChecksum(data);if(currentChecksum !== backup.checksum){throw new Error('Checksum no coincide. El backup puede estar corrupto.');}await this.createBackup('RESTORE_BACKUP','Backup antes de restaurar');Object.keys(data).forEach((key)=>{localStorage.setItem(key,JSON.stringify(data[key]));});console.log('‚úÖ Backup restaurado exitosamente');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Backup restaurado exitosamente');}setTimeout(()=>{if(confirm('El backup se ha restaurado. ¬øDesea recargar la p√°gina para aplicar los cambios?')){window.location.reload();}},2000);}catch(error){console.error('Error restaurando backup:',error);if(window.axyraNotificationSystem){window.axyraNotificationSystem.showError('Error restaurando backup:' + error.message);}throw error;}}showRecoveryOptions(){const modal = document.createElement('div');modal.className = 'modal-overlay';modal.innerHTML = ` <div class="modal-container"> <div class="modal-header"> <h3>Opciones de Recuperaci√≥n</h3> <button onclick="this.closest('.modal-overlay').remove()" class="btn-close">√ó</button> </div> <div class="modal-body"> <div class="recovery-options"> <h4>Backups Disponibles</h4> <div class="backup-list"> ${this.backups .slice(-10).map((backup)=> ` <div class="backup-item"> <div class="backup-info"> <h5>${backup.type}- ${new Date(backup.timestamp).toLocaleString()}</h5> <p>${backup.description || 'Sin descripci√≥n'}</p> <small>Tama√±o:${this.formatBytes(backup.size)}</small> </div> <div class="backup-actions"> <button onclick="window.axyraDataRecoverySystem.restoreBackup('${backup.id}')" class="btn btn-primary btn-sm"> Restaurar </button> <button onclick="window.axyraDataRecoverySystem.downloadBackup('${backup.id}')" class="btn btn-outline btn-sm"> Descargar </button> </div> </div> `).join('')}</div> <h4>Puntos de Recuperaci√≥n</h4> <div class="recovery-points"> ${this.recoveryPoints .slice(-5).map((point)=> ` <div class="recovery-point-item"> <div class="point-info"> <h5>${point.type}- ${new Date(point.timestamp).toLocaleString()}</h5> <small>Tama√±o:${this.formatBytes(point.size)}</small> </div> <div class="point-actions"> <button onclick="window.axyraDataRecoverySystem.restoreFromPoint('${point.id}')" class="btn btn-primary btn-sm"> Restaurar </button> </div> </div> `).join('')}</div> </div> </div> <div class="modal-footer"> <button onclick="this.closest('.modal-overlay').remove()" class="btn btn-ghost"> Cerrar </button> <button onclick="window.axyraDataRecoverySystem.createBackup('MANUAL','Backup manual')" class="btn btn-primary"> Crear Backup Manual </button> </div> </div> `;document.body.appendChild(modal);}async restoreFromPoint(pointId){const point = this.recoveryPoints.find((p)=> p.id === pointId);if(!point){throw new Error('Punto de recuperaci√≥n no encontrado');}try{await this.createBackup('RESTORE_BACKUP','Backup antes de restaurar desde punto de recuperaci√≥n');Object.keys(point.data).forEach((key)=>{localStorage.setItem(key,JSON.stringify(point.data[key]));});console.log('‚úÖ Restaurado desde punto de recuperaci√≥n');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Restaurado desde punto de recuperaci√≥n');}setTimeout(()=>{window.location.reload();},2000);}catch(error){console.error('Error restaurando desde punto de recuperaci√≥n:',error);throw error;}}async downloadBackup(backupId){const backup = this.backups.find((b)=> b.id === backupId);if(!backup){throw new Error('Backup no encontrado');}try{let data = backup.data;if(this.backupConfig.encryptionEnabled){data = await this.decryptData(data);}if(this.backupConfig.compressionEnabled){data = await this.decompressData(data);}const dataStr = JSON.stringify(data,null,2);const dataBlob = new Blob([dataStr],{type:'application/json'});const url = URL.createObjectURL(dataBlob);const link = document.createElement('a');link.href = url;link.download = `axyra-backup-${backup.id}.json`;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);console.log('üì• Backup descargado');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Backup descargado');}}catch(error){console.error('Error descargando backup:',error);throw error;}}async uploadBackup(file){return new Promise((resolve,reject)=>{const reader = new FileReader();reader.onload = async(event)=>{try{const data = JSON.parse(event.target.result);if(!this.validateBackupStructure(data)){throw new Error('Estructura de backup inv√°lida');}const backup ={id:'backup_' + Date.now(),timestamp:new Date().toISOString(),type:'UPLOADED',description:'Backup subido desde archivo',version:'1.0.0',data:data,size:file.size,checksum:this.calculateChecksum(data),};this.backups.push(backup);this.saveBackups();console.log('‚úÖ Backup subido exitosamente');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Backup subido exitosamente');}resolve(backup);}catch(error){console.error('Error procesando backup:',error);reject(error);}};reader.onerror =()=>{reject(new Error('Error leyendo archivo'));};reader.readAsText(file);});}validateBackupStructure(data){const requiredKeys = ['axyra_empleados','axyra_horas','axyra_nominas'];return requiredKeys.some((key)=> data.hasOwnProperty(key));}formatBytes(bytes){if(bytes === 0)return '0 Bytes';const k = 1024;const sizes = ['Bytes','KB','MB','GB'];const i = Math.floor(Math.log(bytes)/ Math.log(k));return parseFloat((bytes / Math.pow(k,i)).toFixed(2))+ ' ' + sizes[i];}getBackupStatus(){return{totalBackups:this.backups.length,lastBackup:this.backups.length > 0 ? this.backups[this.backups.length - 1].timestamp:null,autoBackupEnabled:this.backupConfig.autoBackup,nextBackup:this.backupTimer ? new Date(Date.now()+ this.backupConfig.backupInterval).toISOString():null,totalSize:this.backups.reduce((total,backup)=> total + backup.size,0),};}updateBackupConfig(newConfig){this.backupConfig ={...this.backupConfig,...newConfig};this.saveBackupConfig();if(newConfig.autoBackup !== undefined){if(newConfig.autoBackup){this.startAutoBackup();}else{this.stopAutoBackup();}}console.log('‚öôÔ∏è Configuraci√≥n de backup actualizada');}deleteBackup(backupId){const index = this.backups.findIndex((b)=> b.id === backupId);if(index !== -1){this.backups.splice(index,1);this.saveBackups();console.log('üóëÔ∏è Backup eliminado');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Backup eliminado');}}}clearAllBackups(){this.backups = [];this.saveBackups();console.log('üßπ Todos los backups eliminados');if(window.axyraNotificationSystem){window.axyraNotificationSystem.showSuccess('Todos los backups eliminados');}}}let axyraDataRecoverySystem;document.addEventListener('DOMContentLoaded',()=>{axyraDataRecoverySystem = new AxyraDataRecoverySystem();window.axyraDataRecoverySystem = axyraDataRecoverySystem;});window.AxyraDataRecoverySystem = AxyraDataRecoverySystem;