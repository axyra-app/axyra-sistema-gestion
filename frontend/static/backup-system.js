const AXYRA_BACKUP ={DEFAULT_CONFIG:{autoBackup:true,backupInterval:300000,maxBackups:10,backupToCloud:false,backupToLocal:true,encryptBackups:true,compressionLevel:6,notifyOnBackup:true,backupOnChange:true,},TYPES:{FULL:'full',INCREMENTAL:'incremental',DIFFERENTIAL:'differential',},STATUS:{IDLE:'idle',RUNNING:'running',COMPLETED:'completed',FAILED:'failed',RESTORING:'restoring',},};class AxyraBackupSystem{constructor(config ={}){this.config ={...AXYRA_BACKUP.DEFAULT_CONFIG,...config};this.status = AXYRA_BACKUP.STATUS.IDLE;this.lastBackup = null;this.backupHistory = [];this.backupTimer = null;this.isInitialized = false;this.init();}async init(){try{await this.loadBackupHistory();this.setupEventListeners();this.startAutoBackup();this.isInitialized = true;console.log('Sistema de backup AXYRA inicializado');if(this.config.notifyOnBackup){this.showBackupNotification('Sistema de backup inicializado correctamente','info');}}catch(error){console.error('Error inicializando sistema de backup:',error);}}setupEventListeners(){if(this.config.backupOnChange){window.addEventListener('storage',(e)=>{if(this.shouldTriggerBackup(e.key)){this.scheduleBackup(30000);}});}window.addEventListener('beforeunload',()=>{this.createQuickBackup();});document.addEventListener('visibilitychange',()=>{if(!document.hidden && this.shouldCreateBackup()){this.createBackup();}});window.addEventListener('online',()=>{if(this.config.backupToCloud){this.syncBackupsToCloud();}});}shouldTriggerBackup(key){const importantKeys = [ 'axyra_isolated_user','axyra_empleados','axyra_horas','axyra_nomina','axyra_cuadre_caja','axyra_configuracion',];return importantKeys.some((importantKey)=> key.includes(importantKey));}shouldCreateBackup(){if(!this.lastBackup)return true;const timeSinceLastBackup = Date.now()- this.lastBackup.timestamp;const minInterval = this.config.backupInterval / 2;return timeSinceLastBackup > minInterval;}startAutoBackup(){if(!this.config.autoBackup)return;this.backupTimer = setInterval(()=>{if(this.shouldCreateBackup()){this.createBackup();}},this.config.backupInterval);}scheduleBackup(delay = 60000){setTimeout(()=>{this.createBackup();},delay);}async createBackup(type = AXYRA_BACKUP.TYPES.FULL){try{if(this.status === AXYRA_BACKUP.STATUS.RUNNING){console.log('Backup ya en progreso,saltando...');return null;}this.status = AXYRA_BACKUP.STATUS.RUNNING;if(this.config.notifyOnBackup){this.showBackupNotification('Iniciando backup del sistema...','info');}const startTime = Date.now();const backupData = await this.collectBackupData(type);const compressedData = await this.compressData(backupData);const encryptedData = await this.encryptData(compressedData);const backup ={id:this.generateBackupId(),type,timestamp:Date.now(),size:encryptedData.length,checksum:this.calculateChecksum(encryptedData),data:encryptedData,metadata:{version:'1.0.0',userAgent:navigator.userAgent,timestamp:new Date().toISOString(),type:type,},};if(this.config.backupToLocal){await this.saveBackupToLocal(backup);}if(this.config.backupToCloud){await this.saveBackupToCloud(backup);}this.backupHistory.unshift(backup);this.lastBackup = backup;this.cleanupOldBackups();await this.saveBackupHistory();const duration = Date.now()- startTime;this.status = AXYRA_BACKUP.STATUS.COMPLETED;if(this.config.notifyOnBackup){this.showBackupNotification(`Backup completado en ${duration}ms. Tamaño:${this.formatBytes(backup.size)}`,'success');}console.log(`Backup completado en ${duration}ms`);return backup;}catch(error){this.status = AXYRA_BACKUP.STATUS.FAILED;console.error('Error creando backup:',error);if(this.config.notifyOnBackup){this.showBackupNotification('Error creando backup:' + error.message,'error');}return null;}}async createQuickBackup(){try{const backupData = await this.collectBackupData(AXYRA_BACKUP.TYPES.INCREMENTAL);const compressedData = await this.compressData(backupData);const quickBackup ={id:this.generateBackupId(),type:AXYRA_BACKUP.TYPES.INCREMENTAL,timestamp:Date.now(),size:compressedData.length,data:compressedData,isQuickBackup:true,};localStorage.setItem('axyra_quick_backup',JSON.stringify(quickBackup));}catch(error){console.warn('No se pudo crear backup rápido:',error);}}async collectBackupData(type){const backupData ={timestamp:Date.now(),type:type,version:'1.0.0',data:{},};try{const localStorageData ={};for(let i = 0;i < localStorage.length;i++){const key = localStorage.key(i);if(key && key.startsWith('axyra_')){try{localStorageData[key] = JSON.parse(localStorage.getItem(key));}catch(e){localStorageData[key] = localStorage.getItem(key);}}}backupData.data.localStorage = localStorageData;const sessionStorageData ={};for(let i = 0;i < sessionStorage.length;i++){const key = sessionStorage.key(i);if(key && key.startsWith('axyra_')){try{sessionStorageData[key] = JSON.parse(sessionStorage.getItem(key));}catch(e){sessionStorageData[key] = sessionStorage.getItem(key);}}}backupData.data.sessionStorage = sessionStorageData;if('indexedDB' in window){try{const indexedDBData = await this.collectIndexedDBData();backupData.data.indexedDB = indexedDBData;}catch(error){console.warn('No se pudo recolectar datos de IndexedDB:',error);}}backupData.data.systemConfig ={userAgent:navigator.userAgent,language:navigator.language,timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,screenResolution:`${screen.width}x${screen.height}`,windowSize:`${window.innerWidth}x${window.innerHeight}`,backupConfig:this.config,};return backupData;}catch(error){console.error('Error recolectando datos para backup:',error);throw error;}}async collectIndexedDBData(){return new Promise((resolve,reject)=>{try{const request = indexedDB.open('axyra-db',1);request.onerror =()=> reject(request.error);request.onsuccess =()=>{const db = request.result;const data ={};const objectStoreNames = db.objectStoreNames;for(const storeName of objectStoreNames){try{const transaction = db.transaction(storeName,'readonly');const store = transaction.objectStore(storeName);const storeData = [];store.openCursor().onsuccess =(event)=>{const cursor = event.target.result;if(cursor){storeData.push({key:cursor.key,value:cursor.value,});cursor.continue();}else{data[storeName] = storeData;if(Object.keys(data).length === objectStoreNames.length){resolve(data);}}};}catch(error){console.warn(`Error recolectando store ${storeName}:`,error);data[storeName] = [];}}if(objectStoreNames.length === 0){resolve(data);}};}catch(error){reject(error);}});}async compressData(data){try{const jsonString = JSON.stringify(data);if(window.LZString){return window.LZString.compress(jsonString);}return jsonString.replace(/\s+/g,' ').trim();}catch(error){console.warn('No se pudo comprimir datos,usando datos originales:',error);return JSON.stringify(data);}}async encryptData(data){try{if(!this.config.encryptBackups){return data;}return btoa(encodeURIComponent(data));}catch(error){console.warn('No se pudo encriptar datos,usando datos originales:',error);return data;}}async decryptData(data){try{if(!this.config.encryptBackups){return data;}return decodeURIComponent(atob(data));}catch(error){console.warn('No se pudo desencriptar datos:',error);return data;}}async saveBackupToLocal(backup){try{const backupKey = `axyra_backup_${backup.id}`;localStorage.setItem(backupKey,JSON.stringify(backup));sessionStorage.setItem(backupKey,JSON.stringify(backup));console.log(`Backup guardado localmente:${backupKey}`);}catch(error){console.error('Error guardando backup local:',error);throw error;}}async saveBackupToCloud(backup){try{console.log('Backup guardado en la nube(simulado)');}catch(error){console.error('Error guardando backup en la nube:',error);}}async restoreBackup(backupId){try{this.status = AXYRA_BACKUP.STATUS.RESTORING;if(this.config.notifyOnBackup){this.showBackupNotification('Iniciando restauración del backup...','info');}const backup = this.backupHistory.find((b)=> b.id === backupId);if(!backup){throw new Error('Backup no encontrado');}const decryptedData = await this.decryptData(backup.data);const decompressedData = await this.decompressData(decryptedData);await this.restoreData(decompressedData.data);this.status = AXYRA_BACKUP.STATUS.COMPLETED;if(this.config.notifyOnBackup){this.showBackupNotification('Backup restaurado correctamente','success');}console.log('Backup restaurado correctamente');return true;}catch(error){this.status = AXYRA_BACKUP.STATUS.FAILED;console.error('Error restaurando backup:',error);if(this.config.notifyOnBackup){this.showBackupNotification('Error restaurando backup:' + error.message,'error');}return false;}}async decompressData(data){try{if(window.LZString){const decompressed = window.LZString.decompress(data);return JSON.parse(decompressed);}return JSON.parse(data);}catch(error){console.error('Error descomprimiendo datos:',error);throw error;}}async restoreData(data){try{if(data.localStorage){for(const [key,value] of Object.entries(data.localStorage)){if(typeof value === 'object'){localStorage.setItem(key,JSON.stringify(value));}else{localStorage.setItem(key,value);}}}if(data.sessionStorage){for(const [key,value] of Object.entries(data.sessionStorage)){if(typeof value === 'object'){sessionStorage.setItem(key,JSON.stringify(value));}else{sessionStorage.setItem(key,value);}}}if(data.indexedDB && 'indexedDB' in window){await this.restoreIndexedDBData(data.indexedDB);}console.log('Datos restaurados correctamente');}catch(error){console.error('Error restaurando datos:',error);throw error;}}async restoreIndexedDBData(data){return new Promise((resolve,reject)=>{try{const request = indexedDB.open('axyra-db',1);request.onerror =()=> reject(request.error);request.onsuccess =()=>{const db = request.result;Object.entries(data).forEach(([storeName,storeData])=>{try{const transaction = db.transaction(storeName,'readwrite');const store = transaction.objectStore(storeName);store.clear();storeData.forEach((item)=>{store.add(item.value,item.key);});}catch(error){console.warn(`Error restaurando store ${storeName}:`,error);}});resolve();};}catch(error){reject(error);}});}async syncBackupsToCloud(){try{console.log('Sincronizando backups con la nube...');}catch(error){console.error('Error sincronizando backups:',error);}}cleanupOldBackups(){try{if(this.backupHistory.length <= this.config.maxBackups){return;}const backupsToRemove = this.backupHistory.slice(this.config.maxBackups);backupsToRemove.forEach((backup)=>{const backupKey = `axyra_backup_${backup.id}`;localStorage.removeItem(backupKey);sessionStorage.removeItem(backupKey);if(this.config.backupToCloud){this.removeBackupFromCloud(backup.id);}});this.backupHistory = this.backupHistory.slice(0,this.config.maxBackups);console.log(`Removidos ${backupsToRemove.length}backups antiguos`);}catch(error){console.error('Error limpiando backups antiguos:',error);}}async removeBackupFromCloud(backupId){try{console.log(`Backup ${backupId}removido de la nube(simulado)`);}catch(error){console.error('Error removiendo backup de la nube:',error);}}async loadBackupHistory(){try{const historyData = localStorage.getItem('axyra_backup_history');if(historyData){this.backupHistory = JSON.parse(historyData);if(this.backupHistory.length > 0){this.lastBackup = this.backupHistory[0];}}console.log(`Historial de backups cargado:${this.backupHistory.length}backups`);}catch(error){console.error('Error cargando historial de backups:',error);this.backupHistory = [];}}async saveBackupHistory(){try{localStorage.setItem('axyra_backup_history',JSON.stringify(this.backupHistory));}catch(error){console.error('Error guardando historial de backups:',error);}}generateBackupId(){return `backup_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;}calculateChecksum(data){try{let checksum = 0;for(let i = 0;i < data.length;i++){checksum += data.charCodeAt(i);}return checksum.toString(16);}catch(error){return '0000';}}formatBytes(bytes){if(bytes === 0)return '0 Bytes';const k = 1024;const sizes = ['Bytes','KB','MB','GB'];const i = Math.floor(Math.log(bytes)/ Math.log(k));return parseFloat((bytes / Math.pow(k,i)).toFixed(2))+ ' ' + sizes[i];}showBackupNotification(message,type = 'info'){try{if(window.showInfoNotification){window.showInfoNotification(message,{title:'Sistema de Backup AXYRA'});}else{console.log(`[BACKUP] ${message}`);}}catch(error){console.log(`[BACKUP] ${message}`);}}getBackupStats(){const totalSize = this.backupHistory.reduce((sum,backup)=> sum + backup.size,0);const lastBackupTime = this.lastBackup ? new Date(this.lastBackup.timestamp):null;return{totalBackups:this.backupHistory.length,totalSize:this.formatBytes(totalSize),lastBackup:lastBackupTime,status:this.status,config:this.config,};}updateConfig(newConfig){this.config ={...this.config,...newConfig};if(newConfig.backupInterval && this.backupTimer){clearInterval(this.backupTimer);this.startAutoBackup();}}stop(){if(this.backupTimer){clearInterval(this.backupTimer);this.backupTimer = null;}this.status = AXYRA_BACKUP.STATUS.IDLE;console.log('Sistema de backup AXYRA detenido');}}async function createManualBackup(type = AXYRA_BACKUP.TYPES.FULL){if(window.axyraBackup){return await window.axyraBackup.createBackup(type);}return null;}async function restoreBackup(backupId){if(window.axyraBackup){return await window.axyraBackup.restoreBackup(backupId);}return false;}function getBackupStats(){if(window.axyraBackup){return window.axyraBackup.getBackupStats();}return null;}let axyraBackup;function initBackupSystem(){try{axyraBackup = new AxyraBackupSystem();window.axyraBackup = axyraBackup;window.createManualBackup = createManualBackup;window.restoreBackup = restoreBackup;window.getBackupStats = getBackupStats;console.log('Sistema de backup AXYRA disponible globalmente');}catch(error){console.error('Error inicializando sistema de backup:',error);}}if(document.readyState === 'loading'){document.addEventListener('DOMContentLoaded',initBackupSystem);}else{initBackupSystem();}